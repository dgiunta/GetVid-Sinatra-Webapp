%ul#nav
  - if video_list_hashes[:queued]
    %li
      %a.selected#queued_link{ :href => "#queued", :title => 'Show Queued Videos'} Queued
  - if video_list_hashes[:completed]
    %li
      %a.selected#completed_link{ :href => "#completed", :title => 'Show Completed Videos'} Completed
  %li
    %a#new_video_link{ :href => "#", :title => 'Queue up some more videos' } New Video
    
%h1 Welcome to GetVid

#new_video
  %h2 Enter a list of YouTube video urls, one per line.
  %form{ :action => "/get_vids", :method => "post"}
    %label{ :for => "vids_urls" }
    %textarea{ :name => "vids[urls]", :id => "vids_urls" }
    
    .buttons
      %a.cancel{:href => '#'} Cancel
      %input.submit{ :type => "submit", :value => "Get Vids" }

- if video_lists.length == 0
  %h1 There are no videos in the system.
  
- video_lists.each do |list|
  - name = list.keys.first
  - videos = list.values.first
  %div
    %h1= video_list_title_for(name)
    %table.videos{:cellpadding => 0, :cellspacing => 0, :id => name}
      %tr.head
        %th.video Video
        %th.status Status
        %th.action
    
      - videos.each do |video|
        %tr{ :id => "video_#{video.id}" }
          %td.video
            %h3
              %strong Submitted:
              = video.created_at.strftime("%A %B %d %Y at %l:%M%P") unless video.created_at.nil?
            %h2
              %a{ :href => video.url, :title => video.cached_title, :target => "_blank" }= video.cached_title
            - if video.state == 'complete'
              %dl.download_links
                %dt Download:
                - if File.exists?(output_path_to("/Audio/#{video.filename}.aif"))
                  %dd
                    %a{ :href => public_output_path_to("Audio/#{video.filename}.aif"), :title => "Audio File: #{video.title}" } Raw Audio
                - if File.exists?(output_path_to("/Audio/#{video.filename}.mp3"))
                  %dd
                    %a{ :href => public_output_path_to("Audio/#{video.filename}.mp3"), :title => "MP3 File: #{video.title}" } MP3 Audio
                -# if File.exists?(output_path_to("/Video/#{video.filename}.mp4"))
                %dd
                  %a{ :href => public_output_path_to("Video/#{video.filename}.mp4"), :title => "Video: #{video.title}"} Video
          %td.status= video.current_state
          %td
            - if video.state == 'complete'
              %a{ :href => "/videos/#{video.id}/delete" } Delete